# Cursor AI Rules for Modern Teaching

This project uses modular rules for better organization and maintainability.

## 📚 Read All Rule Files

**Primary Context:**
1. `.cursor/rules/core.md` - Project status, milestones, current priorities
2. `.cursor/rules/workflow.md` - Dev environment, testing strategy, common issues

**Technical Details:**
3. `docs/ARCHITECTURE.md` - Data flow, caching, auth, API endpoints
4. `docs/CURRENT-STATUS.md` - Active development, TODOs, session context
5. `docs/USER-JOURNEYS.md` - All implemented features and user flows

---

## 🚨 Critical Rules

### DO NOT Refactor Code

**Testing coverage must be complete before any code refactoring.**

Currently allowed:
- ✅ Documentation updates
- ✅ Test creation
- ✅ Infrastructure setup (Chrome, testing tools)

Not allowed without approval:
- ❌ Code refactoring
- ❌ Architectural changes
- ❌ Feature additions

---

## 🧪 Testing Strategy

**Browser-First Approach:**

1. **Chrome DevTools MCP** (Primary)
   - AI-driven browser automation
   - Best for E2E user journeys
   - Real-time debugging
   - See: https://github.com/ChromeDevTools/chrome-devtools-mcp/

2. **Jest** (Backend/Unit Only)
   - Data transformations
   - API route logic
   - Firebase integration
   - Command: `npm run test:emu`

3. **Playwright** (Minimal)
   - Special cases only
   - Command: `npm run test:simple`

---

## 🎯 Current Priority

**Phase 1A:** Documentation cleanup ← **IN PROGRESS**  
**Phase 1B:** Install Chrome in container  
**Phase 2:** Testing infrastructure (Chrome MCP)  
**Phase 3:** Fill testing gaps  

**DO NOT proceed to code refactoring without explicit approval.**

---

## 📂 Quick Navigation

- **Status:** `.cursor/rules/core.md`
- **Workflow:** `.cursor/rules/workflow.md`
- **Architecture:** `docs/ARCHITECTURE.md`
- **TODOs:** `docs/CURRENT-STATUS.md`
- **Features:** `docs/USER-JOURNEYS.md`

---

**For detailed rules, read the files above. This file only provides navigation.**